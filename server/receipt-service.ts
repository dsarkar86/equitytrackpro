import { Receipt } from "@shared/schema";
import fs from "fs";
import path from "path";
import { storage } from "./storage";

// Simple function to generate a PDF-like receipt (for demo purposes)
// In a production app, you would use a proper PDF generation library
export async function generateReceiptHTML(receipt: Receipt): Promise<string> {
  // Get user information
  const user = await storage.getUser(receipt.userId);
  if (!user) {
    throw new Error("User not found");
  }
  
  const dateFormatted = new Date(receipt.createdAt).toLocaleDateString('en-AU', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
  
  // Generate a simple HTML receipt
  return `
    <!DOCTYPE html>
    <html>
      <head>
        <meta charset="utf-8" />
        <title>Receipt #${receipt.receiptNumber}</title>
        <style>
          body {
            font-family: Arial, sans-serif;
            line-height: 1.6;
            color: #333;
            padding: 20px;
            max-width: 800px;
            margin: 0 auto;
          }
          .header {
            text-align: center;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #ddd;
          }
          .logo {
            font-size: 24px;
            font-weight: bold;
            color: #3b82f6;
          }
          .receipt-details {
            display: flex;
            justify-content: space-between;
            margin-bottom: 30px;
          }
          .receipt-details div {
            flex: 1;
          }
          .label {
            font-weight: bold;
            color: #666;
            margin-bottom: 5px;
          }
          .value {
            font-size: 16px;
          }
          .amount {
            font-size: 20px;
            font-weight: bold;
            color: #16a34a;
          }
          .footer {
            margin-top: 40px;
            text-align: center;
            font-size: 12px;
            color: #666;
            padding-top: 20px;
            border-top: 1px solid #ddd;
          }
          .payment-details {
            margin-top: 20px;
            padding: 15px;
            background-color: #f8f9fa;
            border-radius: 5px;
          }
        </style>
      </head>
      <body>
        <div class="header">
          <div class="logo">EquitysTek</div>
          <div>Property Management Solution</div>
          <div>ABN: 12 345 678 901</div>
        </div>
        
        <div class="receipt-details">
          <div>
            <div class="label">RECEIPT TO:</div>
            <div class="value">${user.fullName || user.username}</div>
            <div class="value">${user.email}</div>
          </div>
          <div>
            <div class="label">RECEIPT NUMBER:</div>
            <div class="value">${receipt.receiptNumber}</div>
            <div class="label">DATE:</div>
            <div class="value">${dateFormatted}</div>
          </div>
        </div>
        
        <div>
          <div class="label">PAYMENT FOR:</div>
          <div class="value">${receipt.description || (receipt.type === "subscription" ? "Subscription Payment" : "One-time Payment")}</div>
        </div>
        
        <div class="payment-details">
          <div class="label">PAYMENT METHOD:</div>
          <div class="value">Credit Card</div>
          <div class="label">PAYMENT STATUS:</div>
          <div class="value">Paid</div>
          <div class="label">AMOUNT PAID:</div>
          <div class="amount">$${receipt.amount.toFixed(2)} AUD</div>
        </div>
        
        <div class="footer">
          <p>This receipt was automatically generated by EquitysTek.</p>
          <p>For any questions regarding this receipt, please contact support@equitystek.com.au</p>
          <p>Thank you for your business!</p>
        </div>
      </body>
    </html>
  `;
}

// Ensure uploads directory exists for storing generated receipts
export function ensureReceiptDirectory(): string {
  const receiptDir = path.join(process.cwd(), 'uploads', 'receipts');
  
  if (!fs.existsSync(receiptDir)) {
    fs.mkdirSync(receiptDir, { recursive: true });
  }
  
  return receiptDir;
}

// Save HTML receipt to file
export async function saveReceiptToFile(receipt: Receipt, html: string): Promise<string> {
  const receiptDir = ensureReceiptDirectory();
  const filename = `receipt_${receipt.receiptNumber.replace(/[^a-zA-Z0-9]/g, '_')}.html`;
  const filepath = path.join(receiptDir, filename);
  
  fs.writeFileSync(filepath, html);
  
  return filepath;
}